% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/states_define.R
\name{define_state}
\alias{define_state}
\alias{define_state_}
\alias{modify.state}
\title{Define a Markov Model State}
\usage{
define_state(..., starting_values = define_starting_values())

define_state_(x)

\method{modify}{state}(.OBJECT, ...)
}
\arguments{
\item{...}{Name-value pairs of expressions defining state
values.}

\item{starting_values}{Optional starting values defined
with \code{\link[=define_starting_values]{define_starting_values()}}.}

\item{x}{Used to work around non-standard evaluation.}

\item{.OBJECT}{An object of class \code{state}.}
}
\value{
An object of class \code{state} (actually a named
list of quosures).
}
\description{
Define the values characterising a Markov Model state for
1 cycle.
}
\details{
As with \code{\link[=define_parameters]{define_parameters()}}, state values are
defined sequentially. Later state definition can thus
only refer to values defined earlier.

For the \code{modify} function, existing values are
modified, no new values can be added. Values order
matters since only values defined earlier can be
referenced in later expressions.
}
\examples{
st <- define_state(
  cost = 6453,
  utility = .876
)
st
}
